server {
    listen 80;
    server_name ${SERVER_NAME};

    # Docker DNS (для proxy_pass с переменными)
    resolver 127.0.0.11 ipv6=off valid=10s;

    # Удобные переменные-адреса
    set $backend  http://app:8000;
    set $metabase http://metabase:3000;
    set $grafana  http://grafana:3000;

    # Безопасные заголовки и лимиты
    client_max_body_size 20m;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header Referrer-Policy strict-origin-when-cross-origin;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()";

    # Healthcheck
    location = /nginx/health {
        return 200 'ok';
        add_header Content-Type text/plain;
    }

    # --- Статика Django ---
    location /static/ {
        alias /app/backend/collected_static/;
        expires 30d;
        access_log off;
    }

    # --- QR-коды (узкий путь ставим первым) ---
    location /media/qr/ {
        alias /app/media/qr_codes/;
        access_log off;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # --- Все прочие медиа ---
    location /media/ {
        alias /app/media/;
        access_log off;
    }

    # --- Метрики приложения ---
    location /metrics {
        allow 127.0.0.1;
        allow 172.16.0.0/12;
        deny all;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        proxy_pass $backend;
    }

    # --- Metabase ---
    location = /metabase { return 301 /metabase/; }
    location /metabase/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Prefix /metabase/;

        proxy_connect_timeout 3s;
        proxy_send_timeout    60s;
        proxy_read_timeout    60s;
        proxy_http_version    1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;

        proxy_pass $metabase/;
        proxy_redirect off;
    }

    # --- Grafana ---
    location = /grafana { return 301 /grafana/; }
    location /grafana/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Prefix /grafana/;

        proxy_connect_timeout 3s;
        proxy_send_timeout    60s;
        proxy_read_timeout    60s;
        proxy_http_version    1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;

        proxy_pass $grafana/;
        proxy_redirect off;
    }

    # --- Всё остальное в Django (включая /onec/*) ---
    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        proxy_connect_timeout 3s;
        proxy_send_timeout    60s;
        proxy_pass $backend;
    }
}

